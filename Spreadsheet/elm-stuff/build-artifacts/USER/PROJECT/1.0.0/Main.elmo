Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values)
   return _elm.Main.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Main",
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Time = Elm.Time.make(_elm),
   $Window = Elm.Window.make(_elm);
   var vhfm = F2(function (_v0,
   path) {
      return function () {
         switch (_v0.ctor)
         {case "_Tuple2":
            return function () {
                 var myLineStyle = function (clr) {
                    return function () {
                       var localDefaultLine = $Graphics$Collage.defaultLine;
                       return _U.replace([["color"
                                          ,$Color.gray]],
                       localDefaultLine);
                    }();
                 };
                 return $Graphics$Collage.move({ctor: "_Tuple2"
                                               ,_0: (0 - $Basics.toFloat(_v0._0)) / 2
                                               ,_1: (0 - $Basics.toFloat(_v0._1)) / 2})(A2($Graphics$Collage.traced,
                 myLineStyle($Color.gray),
                 path));
              }();}
         _U.badCase($moduleName,
         "between lines 81 and 90");
      }();
   });
   var horzOrVert = F3(function (ctr,
   _v4,
   fm) {
      return function () {
         switch (_v4.ctor)
         {case "_Tuple2":
            return _U.eq(ctr,
              0) ? _L.fromArray([]) : A2($List._op["::"],
              A2(fm,
              ctr,
              {ctor: "_Tuple2"
              ,_0: _v4._0
              ,_1: _v4._1}),
              A3(horzOrVert,
              ctr - 1,
              {ctor: "_Tuple2"
              ,_0: _v4._0
              ,_1: _v4._1},
              fm));}
         _U.badCase($moduleName,
         "between lines 65 and 68");
      }();
   });
   var cellWidth = 100;
   var vfm = F2(function (ctr,
   _v8) {
      return function () {
         switch (_v8.ctor)
         {case "_Tuple2": return A2(vhfm,
              {ctor: "_Tuple2"
              ,_0: _v8._0
              ,_1: _v8._1},
              _L.fromArray([{ctor: "_Tuple2"
                            ,_0: $Basics.toFloat(ctr) * cellWidth
                            ,_1: 0}
                           ,{ctor: "_Tuple2"
                            ,_0: $Basics.toFloat(ctr * cellWidth)
                            ,_1: $Basics.toFloat(_v8._1)}]));}
         _U.badCase($moduleName,
         "between lines 77 and 78");
      }();
   });
   var cellHeight = 17;
   var hfm = F2(function (ctr,
   _v12) {
      return function () {
         switch (_v12.ctor)
         {case "_Tuple2": return A2(vhfm,
              {ctor: "_Tuple2"
              ,_0: _v12._0
              ,_1: _v12._1},
              _L.fromArray([{ctor: "_Tuple2"
                            ,_0: 0
                            ,_1: $Basics.toFloat(ctr) * cellHeight}
                           ,{ctor: "_Tuple2"
                            ,_0: $Basics.toFloat(_v12._0)
                            ,_1: $Basics.toFloat(ctr * cellHeight)}]));}
         _U.badCase($moduleName,
         "between lines 72 and 73");
      }();
   });
   var doGridLines = function (windowSignal) {
      return function () {
         var doGridLinesEx = function (_v16) {
            return function () {
               switch (_v16.ctor)
               {case "_Tuple2":
                  return function () {
                       var hgl = horzOrVert(_v16._1 / cellHeight | 0);
                       var vgl = horzOrVert(_v16._0 / cellWidth | 0);
                       return $List.concat(_L.fromArray([A2(vgl,
                                                        {ctor: "_Tuple2"
                                                        ,_0: _v16._0
                                                        ,_1: _v16._1},
                                                        vfm)
                                                        ,A2(hgl,
                                                        {ctor: "_Tuple2"
                                                        ,_0: _v16._0
                                                        ,_1: _v16._1},
                                                        hfm)]));
                    }();}
               _U.badCase($moduleName,
               "between lines 54 and 59");
            }();
         };
         return A2($Signal.map,
         doGridLinesEx,
         windowSignal);
      }();
   };
   var constrainMovement = F2(function (t,
   _v20) {
      return function () {
         switch (_v20.ctor)
         {case "_Tuple2":
            return _U.cmp(_v20._1,
              20) > 0 ? {ctor: "_Tuple2"
                        ,_0: -1
                        ,_1: 20} : _U.cmp(_v20._1,
              0) < 0 ? {ctor: "_Tuple2"
                       ,_0: 1
                       ,_1: 0} : {ctor: "_Tuple2"
                                 ,_0: _v20._0
                                 ,_1: _v20._1 + _v20._0};}
         _U.badCase($moduleName,
         "between lines 41 and 43");
      }();
   });
   var moveFormOneStep = F2(function (t,
   _v24) {
      return function () {
         switch (_v24.ctor)
         {case "_Tuple2":
            return function () {
                 var x = t / 500;
                 var newVec = A2(constrainMovement,
                 t,
                 _v24._1);
                 return {ctor: "_Tuple2"
                        ,_0: A2($Graphics$Collage.move,
                        {ctor: "_Tuple2"
                        ,_0: x * $Basics.fst(newVec)
                        ,_1: 0},
                        _v24._0)
                        ,_1: newVec};
              }();}
         _U.badCase($moduleName,
         "between lines 32 and 36");
      }();
   });
   var moveForm = function (timeSignal) {
      return function () {
         var myForm = $Graphics$Collage.toForm($Graphics$Element.show("mike was here"));
         return A2($Signal.map,
         $Basics.fst,
         A3($Signal.foldp,
         moveFormOneStep,
         {ctor: "_Tuple2"
         ,_0: myForm
         ,_1: {ctor: "_Tuple2"
              ,_0: 1
              ,_1: 1}},
         timeSignal));
      }();
   };
   var doCollage = F2(function (timeSignal,
   windowSignal) {
      return function () {
         var staticCollageToElement = F3(function (fm,
         fm2,
         _v28) {
            return function () {
               switch (_v28.ctor)
               {case "_Tuple2":
                  return A3($Graphics$Collage.collage,
                    _v28._0,
                    _v28._1,
                    $List.concat(_L.fromArray([_L.fromArray([fm])
                                              ,fm2])));}
               _U.badCase($moduleName,
               "on line 18, column 18 to 71");
            }();
         });
         return A4($Signal.map3,
         staticCollageToElement,
         moveForm(timeSignal),
         doGridLines(windowSignal),
         windowSignal);
      }();
   });
   var main = A2(doCollage,
   $Time.fps(1),
   $Window.dimensions);
   _elm.Main.values = {_op: _op
                      ,main: main
                      ,doCollage: doCollage
                      ,moveForm: moveForm
                      ,moveFormOneStep: moveFormOneStep
                      ,constrainMovement: constrainMovement
                      ,cellHeight: cellHeight
                      ,cellWidth: cellWidth
                      ,doGridLines: doGridLines
                      ,horzOrVert: horzOrVert
                      ,hfm: hfm
                      ,vfm: vfm
                      ,vhfm: vhfm};
   return _elm.Main.values;
};